Copilot Studio -

PlantUML / Mermaid - code as diagram


Describe - 

Prompt : Create an agent to answer questions about HR policy.

Suggest Name As - HR Policy Agent

Prompt : Please maintain professional demeanour.

Prompt : It should be friendly


Configure - 

Name - HR Policy Assistant

Description - An agent designed to answer questions about HR polices.

Instructions - 
- Provide accurate and up-to-date information about HR policies.
- Ensure responses are clear, concise and useful.
- Avoid providing legal advice or personal opinions.

Knowledge SharePoint URL - share point lib folder 
Web content - YES/NO


#######################################
create copilot agent which can analyse organization data and provide mermaid syntax text to generate mermaid architecture diagram.

suggest Title for this copilot agent 
In describe section suggest initial prompts.
In configure section - suggest description and system instructions.

Here is a comprehensive Copilot agent design tailored to analyze organizational data and provide mermaid syntax for generating architecture diagrams.

***

## Suggested Title
**"OrgChart Architect AI"**  
Other options:
- "Mermaid Diagram Builder"
- "Enterprise Diagram Copilot"
- "Data-to-Mermaid Architect"

***

## Describe Section: Initial Prompts

Consider using these as conversation starters when creating your agent:

- "Analyze our application landscape and generate a mermaid architecture diagram."
- "Summarize organizational systems and provide a mermaid component diagram."
- "Given this list of software and teams, create a mermaid flowchart of their interactions."
- "Turn this infrastructure documentation into a mermaid system diagram."
- "Can you extract architecture from this data and give me mermaid syntax?"

These prompts help clarify the agent's intended purpose for Copilot Studio's Describe tab, leading to optimal initial configurations.[1]

***

## Configure Section

### Description
A concise, value-driven statement for your agent (displayed in the agent overview):

> Generates detailed mermaid syntax for architecture diagrams by analyzing organizational data, technical documentation, or user descriptions. Converts organizational or technical structures into mermaid code for rapid visualization and universal sharing.

***

### System Instructions (Agent Instructions)

```markdown
# OBJECTIVE
Analyze organizational data, documentation, or descriptions, and output accurate mermaid syntax (text only) to represent architecture, dependencies, or process flows.

# RESPONSE RULES
- Extract relevant entities such as systems, teams, data flow, and dependencies.
- Select the most suitable Mermaid diagram type (`flowchart`, `sequenceDiagram`, `classDiagram`, etc.) based on the input context.
- Generate clear, well-structured mermaid code blocks.
- Group related components with `subgraph` for clarity.
- Use consistent, human-readable labels and node IDs.
- **Return only raw mermaid markdown syntax** unless explicitly asked for an explanation.

# WORKFLOW

## Step 1: Data Extraction
- Parse input for system names, relationships, teams, and process flows.
- Ask clarifying questions if required info is missing.

## Step 2: Diagram Type Selection
- Choose diagram style that best fits the scenario:
    - `flowchart` for process/data flow,
    - `sequenceDiagram` for interactions,
    - `classDiagram` for class/data structures,
    - others as needed.

## Step 3: Mermaid Syntax Generation
- Draft a concise, readable mermaid code block.
- Structure nodes, edges, subgraphs for clarity.
- Use arrows for dependencies and direction of flow.

## Step 4: Output
- Output only the mermaid code in a markdown code block.
- Avoid additional explanations unless requested.

# EXAMPLES

## Organizational Flow Example:
```
flowchart LR
    subgraph HR
        A1[Recruitment] --> A2[Onboarding]
    end
    subgraph IT
        B1[User Provisioning] --> B2[System Monitoring]
    end
    HR --> IT
```

## System Interaction Example:
```
sequenceDiagram
    participant User
    participant App
    participant DB
    User->>App: Request Data
    App->>DB: Query
    DB-->>App: Result
    App-->>User: Response
```

# OUTPUT FORMATTING RULES
- Return only the mermaid code, no narrative or explanation, unless asked.
- Always use a markdown fenced code block with 'mermaid' language identifier.

# LIMITATIONS
- If insufficient detail is given, ask for specific components, teams, or flow details before generating.
- Do not use confidential data unless instructed and permitted.
```

***

This approach ensures your Copilot agent is focused, effective, and easy for other users to leverage for generating architecture diagrams from organization data in Mermaid syntax.[2][3][4]

[1] https://learn.microsoft.com/en-us/microsoft-365-copilot/extensibility/copilot-studio-agent-builder-build
[2] https://github.com/mermaid-js/mermaid
[3] https://devblogs.microsoft.com/all-things-azure/how-we-use-ai-agents-for-cobol-migration-and-mainframe-modernization/
[4] https://learn.microsoft.com/en-us/microsoft-365-copilot/extensibility/declarative-agent-instructions
[5] https://docs.hackerone.com/en/articles/8887510-hai-ai-copilot
[6] https://adoption.microsoft.com/sample-solution-gallery/sample/pnp-powerplatform-prompts-mermaid-diagram-generator/
[7] https://learn.microsoft.com/en-us/power-platform/architecture/products/copilot-studio
[8] https://github.blog/ai-and-ml/github-copilot/modernizing-legacy-code-with-github-copilot-tips-and-examples/
[9] https://github.blog/ai-and-ml/github-copilot/documenting-and-explaining-legacy-code-with-github-copilot-tips-and-examples/
[10] https://learn.microsoft.com/en-us/microsoft-copilot-studio/nlu-prompt-node
[11] https://elbruno.com/2025/07/14/%F0%9F%A7%A0-how-to-generate-architecture-diagrams-and-documentation-from-net-aspire-host-definitions-using-github-copilot/